=begin
#API Reference

#Review our [API Introduction](../api-introduction) to get started.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
=end

module TurnkeyClient
  class WalletsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create wallet
    # Create a wallet and derive addresses.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def create_wallet(body, opts = {})
      data, _status_code, _headers = create_wallet_with_http_info(body, opts)
      data
    end

    # Create wallet
    # Create a wallet and derive addresses.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def create_wallet_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.create_wallet ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.create_wallet"
      end
      # resource path
      local_var_path = '/public/v1/submit/create_wallet'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#create_wallet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create wallet accounts
    # Derive additional addresses using an existing wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def create_wallet_accounts(body, opts = {})
      data, _status_code, _headers = create_wallet_accounts_with_http_info(body, opts)
      data
    end

    # Create wallet accounts
    # Derive additional addresses using an existing wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def create_wallet_accounts_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.create_wallet_accounts ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.create_wallet_accounts"
      end
      # resource path
      local_var_path = '/public/v1/submit/create_wallet_accounts'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#create_wallet_accounts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete wallets
    # Delete wallets for an organization.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def delete_wallets(body, opts = {})
      data, _status_code, _headers = delete_wallets_with_http_info(body, opts)
      data
    end

    # Delete wallets
    # Delete wallets for an organization.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def delete_wallets_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.delete_wallets ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.delete_wallets"
      end
      # resource path
      local_var_path = '/public/v1/submit/delete_wallets'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#delete_wallets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Export wallet
    # Export a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def export_wallet(body, opts = {})
      data, _status_code, _headers = export_wallet_with_http_info(body, opts)
      data
    end

    # Export wallet
    # Export a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def export_wallet_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.export_wallet ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.export_wallet"
      end
      # resource path
      local_var_path = '/public/v1/submit/export_wallet'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#export_wallet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Export wallet account
    # Export a wallet account.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def export_wallet_account(body, opts = {})
      data, _status_code, _headers = export_wallet_account_with_http_info(body, opts)
      data
    end

    # Export wallet account
    # Export a wallet account.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def export_wallet_account_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.export_wallet_account ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.export_wallet_account"
      end
      # resource path
      local_var_path = '/public/v1/submit/export_wallet_account'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#export_wallet_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get wallet
    # Get details about a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [GetWalletResponse]
    def get_wallet(body, opts = {})
      data, _status_code, _headers = get_wallet_with_http_info(body, opts)
      data
    end

    # Get wallet
    # Get details about a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetWalletResponse, Integer, Hash)>] GetWalletResponse data, response status code and response headers
    def get_wallet_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.get_wallet ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.get_wallet"
      end
      # resource path
      local_var_path = '/public/v1/query/get_wallet'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetWalletResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#get_wallet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get wallet account
    # Get a single wallet account.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [GetWalletAccountResponse]
    def get_wallet_account(body, opts = {})
      data, _status_code, _headers = get_wallet_account_with_http_info(body, opts)
      data
    end

    # Get wallet account
    # Get a single wallet account.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetWalletAccountResponse, Integer, Hash)>] GetWalletAccountResponse data, response status code and response headers
    def get_wallet_account_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.get_wallet_account ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.get_wallet_account"
      end
      # resource path
      local_var_path = '/public/v1/query/get_wallet_account'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetWalletAccountResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#get_wallet_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List wallets accounts
    # List all accounts within a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [GetWalletAccountsResponse]
    def get_wallet_accounts(body, opts = {})
      data, _status_code, _headers = get_wallet_accounts_with_http_info(body, opts)
      data
    end

    # List wallets accounts
    # List all accounts within a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetWalletAccountsResponse, Integer, Hash)>] GetWalletAccountsResponse data, response status code and response headers
    def get_wallet_accounts_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.get_wallet_accounts ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.get_wallet_accounts"
      end
      # resource path
      local_var_path = '/public/v1/query/list_wallet_accounts'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetWalletAccountsResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#get_wallet_accounts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List wallets
    # List all wallets within an organization.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [GetWalletsResponse]
    def get_wallets(body, opts = {})
      data, _status_code, _headers = get_wallets_with_http_info(body, opts)
      data
    end

    # List wallets
    # List all wallets within an organization.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetWalletsResponse, Integer, Hash)>] GetWalletsResponse data, response status code and response headers
    def get_wallets_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.get_wallets ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.get_wallets"
      end
      # resource path
      local_var_path = '/public/v1/query/list_wallets'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'GetWalletsResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#get_wallets\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Import wallet
    # Import a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def import_wallet(body, opts = {})
      data, _status_code, _headers = import_wallet_with_http_info(body, opts)
      data
    end

    # Import wallet
    # Import a wallet.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def import_wallet_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.import_wallet ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.import_wallet"
      end
      # resource path
      local_var_path = '/public/v1/submit/import_wallet'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#import_wallet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Init import wallet
    # Initialize a new wallet import.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def init_import_wallet(body, opts = {})
      data, _status_code, _headers = init_import_wallet_with_http_info(body, opts)
      data
    end

    # Init import wallet
    # Initialize a new wallet import.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def init_import_wallet_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.init_import_wallet ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.init_import_wallet"
      end
      # resource path
      local_var_path = '/public/v1/submit/init_import_wallet'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#init_import_wallet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update wallet
    # Update a wallet for an organization.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [ActivityResponse]
    def update_wallet(body, opts = {})
      data, _status_code, _headers = update_wallet_with_http_info(body, opts)
      data
    end

    # Update wallet
    # Update a wallet for an organization.
    # @param body 
    # @param [Hash] opts the optional parameters
    # @return [Array<(ActivityResponse, Integer, Hash)>] ActivityResponse data, response status code and response headers
    def update_wallet_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: WalletsApi.update_wallet ...'
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling WalletsApi.update_wallet"
      end
      # resource path
      local_var_path = '/public/v1/submit/update_wallet'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(body) 

      return_type = opts[:return_type] || 'ActivityResponse' 

      auth_names = opts[:auth_names] || ['ApiKeyAuth', 'AuthenticatorAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WalletsApi#update_wallet\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
